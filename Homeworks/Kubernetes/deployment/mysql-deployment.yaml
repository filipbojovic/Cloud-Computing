apiVersion: v1
kind: Service
metadata:
  name: ml-mysql
  namespace: fika
  labels:
    app: model-training
spec:
  ports:
    - port: 3306
      nodePort: 30008
      targetPort: 3306
  selector:
    app: model-training
    tier: python
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-mysql-storage-claim
  namespace: fika
  labels:
    app: model-training
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-mysql
  namespace: fika
  labels:
    app: model-training
spec:
  selector:
    matchLabels:
      app: model-training
      tier: python
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: model-training
        tier: python
    spec:
      containers:
      - image: mysql:latest
        name: mysql
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ml-mysql-pass-td6b9b2c9c
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: ml-mysql-initdb-storage
          mountPath: /docker-entrypoint-initdb.d
        - name: ml-mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: ml-mysql-initdb-storage
        persistentVolumeClaim:
          claimName: ml-mysql-initdb-claim
      - name: ml-mysql-persistent-storage
        persistentVolumeClaim:
          claimName: ml-mysql-storage-claim
